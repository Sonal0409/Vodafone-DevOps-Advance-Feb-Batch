===============================================
Terraform Cloud:
=============================================

Hashicorp provides terraform for its users in 2 ways

Terraform CLI
Terraform cloud

Terraform CLI:
=======================
VM where we install terraform and run TF config files
From CLI terraform will connect to AWS and create the resources.

Terraform Cloud:
=======================
In terraform cloud hasicorp provides terraform as service on the internet.
This service is given with Terraform Enterprise but a trial version is also available for community
On the terraform cloud, you can login with valid email and password and run the TF config code.
You don’t write tF code on the Cloud rather we maintain it in any VC tool like github. Bitbucket, gitlab and so on..
Terraform Cloud supports workspaces in order to store environment specific state file
Terraform Cloud allows us to store variables of type environment and secrets. These variables can then be used in the config files.
Terraform cloud will show you all the execution history of the initialization, plan and apply done on the provider.
Like on CLI we create directories to maintain TF files, on the cloud you can create Projects
A project in TF cloud is nothing but a container.
Terraform Cloud we can create organization that container projects and workspaces
In the cloud we can add roles and permission who can run the code 
HCP Terraform organizes your infrastructure resources by workspaces. A workspace contains infrastructure resources, variables, state data, and run history

Demo:
=================================

Go to below URL and create new account for terraformcloud


https://app.terraform.io/public/signup/account



You will be on organizations pge

Create organization




You will be on workspace page
Click on version control workflow






Select github.com→ select your repo→ click on the repo name → you will on configure settings



Click on continue to setup workspace






Click on configure variables → Click on add variable→ select environment


Give key as : AWS_ACCESS_KEY_ID
Value as accesskey id create din aws

Give key as : AWS_SECRET_ACCESS_KEY
Value as secret key created in aws


Now lets click on run


After the run → go to organization → click on settings→ click on policy set→ create it

Click on policy→ create a policy → give a name and add below code.


import "tfplan"
 
main = rule {
  all tfplan.resources.aws_instance as _, instances {
	all instances as _, r {
      (length(r.applied.tags) else 0) > 0
	}
  }
}

OR

import "tfplan"

# Define allowed instance types
allowed_instance_types = ["t2.micro", "t3.micro", "t3a.micro"]

# Iterate over resources to check if they are AWS EC2 instances
main = rule {
  all tfplan.resources.aws_instance as _, instances {
    all instances as _, instance {
      instance.applied.instance_type in allowed_instance_types
    }
  }
}
